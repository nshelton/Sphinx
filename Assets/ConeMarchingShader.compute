#pragma kernel CSMain

RWTexture2D<float4> _Previous;
RWTexture2D<float4> _Result;

#include "distance.hlsl"
#include "common.hlsl"

float2 _ClipPlanes;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    Ray ray = getRay(id.xy);
    
    // raymarch
    float t = _ClipPlanes.x;
    bool hit = false;
    if ( _Level < 7) { 
        t = _Previous[id.xy / 2].x;
    }

    for(int i = 0; i < 10; i ++) {
        float d = map(t * ray.direction + ray.origin);
        if ( d < getPixelSize(t) || t > _ClipPlanes.y ) {
            if ( _Level == 0)
                hit = true;
            break;
        }
        t += d;
    }

    _Result[id.xy] = float4(t, hit, 0, 1);
}
